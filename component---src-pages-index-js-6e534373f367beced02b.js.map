{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/constants/Skills.js","webpack:///./src/components/Skills.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js"],"names":["Project","description","title","github","stack","url","image","index","className","fluid","childImageSharp","map","item","key","id","href","Projects","projects","showLink","Title","project","to","Hero","useStaticQuery","file","icon","text","Services","services","service","data","allStrapiProjects","nodes","blogs","allStrapiBlogs","Layout","SEO","Blogs","Blog","date","slug","category","blog"],"mappings":"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","file":"component---src-pages-index-js-6e534373f367beced02b.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\n\nconst Project = ({ description, title, github, stack, url, image, index }) => {\n  return (\n    <article className=\"project\">\n      {image && (\n        <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n      )}\n      <div className=\"project-info\">\n        <span className=\"project-number\">0 {index + 1}. </span>\n        <h3>{title || \"default title\"}</h3>\n        <p className=\"project-desc\">{description}</p>\n        <div className=\"project-stack\">\n          {stack.map(item => (\n            <span key={item.id} className=\"\">\n              {item.title}\n            </span>\n          ))}\n        </div>\n        <div className=\"project-links\">\n          <a href={github}>\n            <FaGithubSquare className=\"project-icon\"></FaGithubSquare>\n          </a>\n          <a href={url}>\n            <FaShareSquare className=\"project-icon\"></FaShareSquare>\n          </a>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nProject.propTypes = {\n  description: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  github: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\n\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title} />\n      <div className=\"section-center projects-center\">\n        {projects.map((project, index) => (\n          <Project key={project.id} index={index} {...project} />\n        ))}\n      </div>\n      {showLink && (\n        <Link to=\"/projects\" className=\"btn center-btn\">\n          More Projects\n        </Link>\n      )}\n    </section>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport SocialLinks from \"../constants/socialLinks\"\nimport { FaChevronDown } from \"react-icons/fa\"\n\nconst query = graphql`\n  {\n    file(relativePath: { eq: \"hero-img.png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n\nconst Hero = () => {\n  const {\n    file: {\n      childImageSharp: { fluid },\n    },\n  } = useStaticQuery(query)\n  // console.log(data);\n  return (\n    <header className=\"hero\">\n      <div className=\"section-center hero-center\">\n        <article className=\"hero-info\">\n          <div>\n            <div className=\"underline\"></div>\n            <h1>Hello,</h1>\n            <h1> I'm Shashank</h1>\n            <h4>Full-Stack Developer | Mentor | Agile-Devops Coach</h4>\n            <Link to=\"/contact\" className=\"btn\">\n              Let's Connect\n            </Link>\n            <SocialLinks />\n          </div>\n        </article>\n        <Image fluid={fluid} className=\"hero-img\" />\n        <div className=\"Scroll\">\n          <div>Explore</div>\n          <div>\n            <FaChevronDown className=\"social-icon\"></FaChevronDown>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport { FaCode, FaHandshake, FaInfinity } from \"react-icons/fa\"\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"full-stack development\",\n    text: `Powerful user centric apps built for the cloud`,\n  },\n  {\n    id: 2,\n    icon: <FaHandshake className=\"service-icon\" />,\n    title: \"Mentoring\",\n    text: `1:1 code collaboration and pair programming on your project`,\n  },\n  {\n    id: 3,\n    icon: <FaInfinity className=\"service-icon\" />,\n    title: \"Agile-DevOps\",\n    text: `Coaching and consultation to take your team and product to the next level`,\n  },\n]\n","import React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\nconst Services = () => {\n  return (\n    <section className=\"section bg-grey\">\n      <Title title=\"services\" />\n      <div className=\"section-center services-center\">\n        {services.map(service => {\n          const { id, icon, title, text } = service\n\n          return (\n            <article key={id} className=\"service\">\n              {icon}\n              <h4>{title}</h4>\n              <div className=\"underline\"></div>\n              <p>{text}</p>\n            </article>\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default Services","import React from \"react\"\nimport {\n  FaCode,\n  FaServer,\n  FaDatabase,\n  FaCloud,\n  FaCodeBranch,\n  FaRegQuestionCircle,\n} from \"react-icons/fa\"\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"front end\",\n    text: `HTML | CSS | JavaScript | Typescript | React | Redux | Next JS | Gatsby | Graphql`,\n  },\n  {\n    id: 2,\n    icon: <FaServer className=\"service-icon\" />,\n    title: \"back end\",\n    text: `Node JS | Express | Python | Go | .Net | Docker | Kubernetes`,\n  },\n  {\n    id: 3,\n    icon: <FaDatabase className=\"service-icon\" />,\n    title: \"databases\",\n    text: `SQL | MongoDB | Mongoose | PostgreSQL | MySQL | Redis`,\n  },\n  {\n    id: 4,\n    icon: <FaCloud className=\"service-icon\" />,\n    title: \"cloud\",\n    text: `AWS | Google Cloud | Firebase| AWS Lamda`,\n  },\n  {\n    id: 5,\n    icon: <FaCodeBranch className=\"service-icon\" />,\n    title: \"version control\",\n    text: `Git | Github | Gitlab`,\n  },\n\n  {\n    id: 6,\n    icon: <FaRegQuestionCircle className=\"service-icon\" />,\n    title: \"testing\",\n    text: `Jest | Cypress | Mocha | Chai | Jasmine`,\n  },\n]\n","import React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/Skills\"\n\nconst Services = () => {\n  return (\n    <section className=\"section bg-grey\">\n      <Title title=\"My Tools\" />\n      <div className=\"section-center services-center\">\n        {services.map(service => {\n          const { id, icon, title, text } = service\n          return (\n            <article key={id} className=\"service\">\n              {icon}\n              <h4>{title}</h4>\n              <div className=\"underline\"></div>\n              <p>{text}</p>\n            </article>\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default Services","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Hero from \"../components/Hero\"\nimport Services from \"../components/Services\"\nimport Skills from \"../components/Skills\"\nimport Projects from \"../components/Projects\"\nimport Blogs from \"../components/Blogs\"\nimport SEO from \"../components/SEO\"\nexport default ({ data }) => {\n  const {\n    allStrapiProjects: { nodes: projects },\n    allStrapiBlogs: { nodes: blogs },\n  } = data\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" description=\"Home page for Shashank Katte\" />\n      <Hero />\n      <Services />\n      <Projects projects={projects} title=\"Featured Projects\" showLink />\n      <Blogs blogs={blogs} title=\"latests articles\" showLink />\n      <Skills />\n    </Layout>\n  )\n}\nexport const query = graphql`\n  {\n    allStrapiProjects(\n      filter: { featured: { eq: true } }\n      sort: { fields: [priority], order: ASC }\n    ) {\n      nodes {\n        id\n        description\n        github\n        title\n        url\n        priority\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n    allStrapiBlogs(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        desc\n        title\n        slug\n        date(formatString: \"MMM Do, YYYY\")\n        category\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\n\nconst Blog = ({ date, description, id, image, slug, title, category }) => {\n  return (\n    <Link to={`/blogs/${slug}`} key={id} className=\"blog\">\n      {/* link dynamically to each blog post */}\n      <article>\n        {image && (\n          <Image fluid={image.childImageSharp.fluid} className=\"blog-img\" />\n        )}\n        <div className=\"blog-card\">\n          <h4>{title}</h4>\n          <p>{description}</p>\n          <div className=\"blog-footer\">\n            <p>{category}</p>\n            <p>{date}</p>\n          </div>\n        </div>\n      </article>\n    </Link>\n  )\n}\n\nBlog.propTypes = {\n  id: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  slug: PropTypes.object.isRequired,\n  image: PropTypes.object.isRequired,\n}\n\n\nexport default Blog","import React from \"react\"\nimport Title from \"./Title\"\nimport Blog from \"./Blog\"\nimport { Link } from \"gatsby\"\n\nexport const Blogs = ({ blogs, showLink, title }) => {\n  return (\n    <section className=\"section\">\n      <Title title={title} />\n      <div className=\"section-center blogs-center\">\n        {blogs.map((blog, index) => (\n          <Blog key={index} index={index} {...blog} />\n        ))}\n      </div>\n      {showLink && (\n        <Link to=\"/blog\" className=\"btn center-btn\">\n          More Articles\n        </Link>\n      )}\n    </section>\n  )\n}\nexport default Blogs\n"],"sourceRoot":""}